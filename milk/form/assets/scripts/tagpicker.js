/** * @author  */var TagPicker = Control.extend({		xType: 'tagpicker',		onChange: function(){		var content = ' ' + this.getText() + ' ';				this.targets.each(function(value){			value = Dom.get(value);			value.toggleClass('x-tagpicker-selected', content.indexOf(' ' + value.getText().substr(2) + ' ') > -1);		});			},		init: function(options){				var me = this;					me.targets = options.targets.on('click', function(){			var value = me.getText(), newValue = this.getText().substr(2);			if(this.hasClass('x-tagpicker-selected')) {				me.setText((' ' + value + ' ').replace(' ' + newValue + ' ', ' ').trim());				this.removeClass('x-tagpicker-selected');			} else if((' ' + value + ' ').indexOf(' ' + newValue + ' ') === -1) {				this.addClass('x-tagpicker-selected');				me.setText(  (value ? value + ' ' : value) + newValue);			} else {				this.addClass('x-tagpicker-selected');			}		});				me.targets.each(function(value){			var node = Dom.get(value);			node.setText('âœš ' + node.getText());			});				delete options.targets;				this.on('keyup', this.onChange);				this.onChange();			}});